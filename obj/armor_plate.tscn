[gd_scene load_steps=15 format=2]

[ext_resource path="res://src/armor_plate_brain.gd" type="Script" id=1]

[sub_resource type="BoxShape" id=16]
extents = Vector3( 0.25, 0.125, 0.05 )

[sub_resource type="VisualShaderNodeVectorOp" id=26]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=27]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=28]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id=18]
constant = Color( 0.476563, 1, 0, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=19]
constant = Color( 0.780273, 0, 0, 1 )

[sub_resource type="VisualShaderNodeScalarUniform" id=25]
uniform_name = "Life"

[sub_resource type="VisualShaderNodeScalarClamp" id=29]

[sub_resource type="VisualShaderNodeScalarConstant" id=30]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=31]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShader" id=23]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Life;



void vertex() {
// Output:0

}

void fragment() {
// Color:4
	vec3 n_out4p0 = vec3(0.780273, 0.000000, 0.000000);
	float n_out4p1 = 1.000000;

// ScalarUniform:6
	float n_out6p0 = Life;

// ScalarClamp:7
	float n_in7p1 = 0.00000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out6p0, n_in7p1, n_in7p2);

// VectorOp:11
	vec3 n_out11p0 = n_out4p0 * vec3(n_out7p0);

// Color:3
	vec3 n_out3p0 = vec3(0.476563, 1.000000, 0.000000);
	float n_out3p1 = 1.000000;

// Scalar:8
	float n_out8p0 = 1.000000;

// ScalarOp:9
	float n_out9p0 = n_out8p0 - n_out7p0;

// VectorOp:12
	vec3 n_out12p0 = n_out3p0 * vec3(n_out9p0);

// VectorOp:13
	vec3 n_out13p0 = n_out11p0 + n_out12p0;

// Output:0
	ALBEDO = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -159, 143.25 )
nodes/fragment/0/position = Vector2( 860, 100 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( 280, 260 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( -140, 180 )
nodes/fragment/6/node = SubResource( 25 )
nodes/fragment/6/position = Vector2( -340, 280 )
nodes/fragment/7/node = SubResource( 29 )
nodes/fragment/7/position = Vector2( -140, 360 )
nodes/fragment/8/node = SubResource( 30 )
nodes/fragment/8/position = Vector2( -140, 280 )
nodes/fragment/9/node = SubResource( 31 )
nodes/fragment/9/position = Vector2( 80, 360 )
nodes/fragment/11/node = SubResource( 26 )
nodes/fragment/11/position = Vector2( 80, 140 )
nodes/fragment/12/node = SubResource( 27 )
nodes/fragment/12/position = Vector2( 460, 260 )
nodes/fragment/13/node = SubResource( 28 )
nodes/fragment/13/position = Vector2( 660, 140 )
nodes/fragment/connections = PoolIntArray( 7, 0, 11, 1, 12, 0, 13, 1, 11, 0, 13, 0, 9, 0, 12, 1, 8, 0, 9, 0, 7, 0, 9, 1, 13, 0, 0, 0, 6, 0, 7, 0, 3, 0, 12, 0, 4, 0, 11, 0 )

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 23 )
shader_param/Life = 0.0

[sub_resource type="QuadMesh" id=17]
material = SubResource( 24 )
size = Vector2( 0.35, 0.1 )

[node name="armor_plate" type="KinematicBody"]
script = ExtResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 16 )

[node name="mesh" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, -0.1, 0 )
cast_shadow = 0
mesh = SubResource( 17 )
material/0 = null
